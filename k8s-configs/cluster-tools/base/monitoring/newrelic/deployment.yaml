---
# Source: p1as-newrelic/charts/nri-bundle/charts/newrelic-infrastructure/templates/ksm/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: newrelic-infrastructure
    app.kubernetes.io/version: 3.17.0
    helm.sh/chart: newrelic-infrastructure-3.22.0
    mode: privileged
  name: nri-bundle-nrk8s-ksm
spec:
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/instance: nri-bundle
      app.kubernetes.io/name: newrelic-infrastructure
      app.kubernetes.io/component: ksm
  template:
    metadata:
      annotations:
        checksum/nri-kubernetes: 8e953ee663fd1219a01e13477f3948f9820842b6b42f22fc36a5b17b648e9d2b
        checksum/agent-config: c8b017d1fba11a65690e4ce0deb076a0a7fe2c1dbc8767f31fa21fa1c93fbb21
      labels:
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: newrelic-infrastructure
        mode: privileged
        app.kubernetes.io/component: ksm
    spec:
      serviceAccountName: nri-bundle-newrelic-infrastructure
      hostNetwork: false
      containers:
        - name: ksm
          image: "public.ecr.aws/r2h3l6e4/pingcloud-clustertools/newrelic/nri-kubernetes:3.17.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          env:
            - name: "NRI_KUBERNETES_SINK_HTTP_PORT"
              value: "8002"
            - name: "NRI_KUBERNETES_CLUSTERNAME"
              value: test-cluster
            - name: "NRI_KUBERNETES_VERBOSE"
              value: "false"

            - name: "NRI_KUBERNETES_NODENAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
          volumeMounts:
            - name: nri-kubernetes-config
              mountPath: /etc/newrelic-infra/nri-kubernetes.yml
              subPath: nri-kubernetes.yml
          resources:
            limits:
              memory: 850M
            requests:
              cpu: 100m
              memory: 150M
        - name: forwarder
          image: "public.ecr.aws/r2h3l6e4/pingcloud-clustertools/newrelic/k8s-events-forwarder:1.47.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsGroup: 2000
            runAsUser: 1000
          ports:
            - containerPort: 8002
          env:
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: newrelic-license-key
                  key: NEW_RELIC_LICENSE_KEY

            - name: "NRIA_DNS_HOSTNAME_RESOLUTION"
              value: "false"

            - name: "K8S_NODE_NAME"
              valueFrom:
                fieldRef:
                  apiVersion: "v1"
                  fieldPath: "spec.nodeName"
          volumeMounts:
            - mountPath: /var/db/newrelic-infra/data
              name: forwarder-tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: forwarder-tmpfs-user-data
            - mountPath: /tmp
              name: forwarder-tmpfs-tmp
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
          resources:
            limits:
              memory: 850M
            requests:
              cpu: 100m
              memory: 150M
      volumes:
        - name: nri-kubernetes-config
          configMap:
            name: nri-bundle-nrk8s-ksm
            items:
              - key: nri-kubernetes.yml
                path: nri-kubernetes.yml
        - name: forwarder-tmpfs-data
          emptyDir: {}
        - name: forwarder-tmpfs-user-data
          emptyDir: {}
        - name: forwarder-tmpfs-tmp
          emptyDir: {}
        - name: config
          configMap:
            name: nri-bundle-nrk8s-agent-ksm
            items:
              - key: newrelic-infra.yml
                path: newrelic-infra.yml
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: kube-state-metrics
                topologyKey: kubernetes.io/hostname
              weight: 100
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
---
# Source: p1as-newrelic/charts/nri-bundle/charts/nri-kube-events/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nri-bundle-nri-kube-events
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-kube-events
    app.kubernetes.io/version: 2.2.2
    helm.sh/chart: nri-kube-events-3.2.0
  annotations:
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-kube-events
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: nri-kube-events
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
        - name: kube-events
          image: public.ecr.aws/r2h3l6e4/pingcloud-clustertools/newrelic/nri-kube-events:2.2.2
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          args: ["-config", "/app/config/config.yaml", "-loglevel", "debug"]
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
        - name: forwarder
          image: public.ecr.aws/r2h3l6e4/pingcloud-clustertools/newrelic/k8s-events-forwarder:1.43.1
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          ports:
            - containerPort: 8001
          env:
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: newrelic-license-key
                  key: NEW_RELIC_LICENSE_KEY

            - name: NRIA_OVERRIDE_HOSTNAME_SHORT
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName

          volumeMounts:
            - mountPath: /var/db/newrelic-infra/data
              name: tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: tmpfs-user-data
            - mountPath: /tmp
              name: tmpfs-tmp
            - name: config
              mountPath: /etc/newrelic-infra.yml
              subPath: newrelic-infra.yml
      serviceAccountName: nri-bundle-nri-kube-events
      volumes:
        - name: config
          configMap:
            name: nri-bundle-nri-kube-events-agent-config
            items:
              - key: newrelic-infra.yml
                path: newrelic-infra.yml
        - name: config-volume
          configMap:
            name: nri-bundle-nri-kube-events-config
        - name: tmpfs-data
          emptyDir: {}
        - name: tmpfs-user-data
          emptyDir: {}
        - name: tmpfs-tmp
          emptyDir: {}
      hostNetwork: false
---
# Source: p1as-newrelic/charts/nri-bundle/charts/nri-metadata-injection/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nri-bundle-nri-metadata-injection
  namespace: newrelic
  labels:
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nri-metadata-injection
    app.kubernetes.io/version: 1.15.0
    helm.sh/chart: nri-metadata-injection-4.7.0
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-metadata-injection
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/name: nri-metadata-injection
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        runAsGroup: 1001
      hostNetwork: false
      containers:
        - name: nri-metadata-injection
          image: "public.ecr.aws/r2h3l6e4/pingcloud-clustertools/newrelic/k8s-metadata-injection:1.15.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: clusterName
              value: test-cluster
          ports:
            - containerPort: 8443
              protocol: TCP
          volumeMounts:
            - name: tls-key-cert-pair
              mountPath: /etc/tls-key-cert-pair
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 1
          resources:

            limits:
              memory: 80M
            requests:
              cpu: 100m
              memory: 30M
      volumes:
        - name: tls-key-cert-pair
          secret:
            secretName: nri-bundle-nri-metadata-injection-admission