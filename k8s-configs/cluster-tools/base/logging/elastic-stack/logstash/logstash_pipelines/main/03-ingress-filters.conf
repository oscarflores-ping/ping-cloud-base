filter {
  if ([kubernetes][container_name] == "nginx-ingress-controller"){
    if ([stream] == "stdout") {
      grok {
        match => {
          "log" => [ "%{IPORHOST:[nginx][access][remote_ip]} - %{USER:[nginx][access][user_name]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{URIPATH:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} \"(?:-|%{URI:[nginx][access][referrer]})\" \"%{DATA:[nginx][access][agent]}\" %{NUMBER:[nginx][access][request_length]} %{NUMBER:[nginx][access][request_time]} \[%{NOTSPACE:[nginx][access][proxy_upstream_name]}\] \[\] (?:-|%{HOSTPORT:[nginx][access][upstream_addr]}) %{NOTSPACE:[nginx][access][upstream_response_length]} %{NOTSPACE:[nginx][access][upstream_response_time]} %{NOTSPACE:[nginx][access][upstream_response_code]} %{NOTSPACE:[nginx][access][req_id]}" ]
        }
        remove_field => ["log"]
        add_field => {"[@metadata][index]" => "ingress-access"}
      }
      date {
        match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
        remove_field => "[nginx][access][time]"
      }
      useragent {
        source => "[nginx][access][agent]"
        target => "[nginx][access][user_agent]"
        remove_field => "[nginx][access][agent]"
      }
      geoip {
        source => "[nginx][access][remote_ip]"
        target => "[nginx][access][geoip]"
      }
      mutate {
        gsub => ["[nginx][access][upstream_response_length]", "-", "0"]
      }
    }
    else if ([stream] == "stderr") {
      if ([log] =~ /^[\d\/: ]+\[.+?\]/) {
        grok {
          match => { "log" => ["%{DATA:[nginx][error][time]} \[%{WORD:[nginx][error][level]}\] %{NUMBER:[nginx][error][pid]}#%{NUMBER:[nginx][error][tid]}: (\*%{NUMBER:[nginx][error][connection_id]} )?%{GREEDYDATA:[nginx][error][message]}"] }
          remove_field => ["log"]
          add_field => {"[@metadata][index]" => "ingress-error"}
        }
        date {
          match => [ "[nginx][error][time]", "YYYY/MM/dd H:m:s" ]
          remove_field => "[nginx][error][time]"
        }
      }
      else if ([log] =~ /^\w{5} [\d:\.]{15}.[ \t]+.*?\]/) {
        grok {
          match => { "log" => ["[A-Z]%{DATA:timestamp} [ \t]+%{DATA}\:%{NUMBER}\] %{GREEDYDATA:[nginx][error][message]}"]}
          remove_field => ["log"]
          add_field => {"[@metadata][index]" => "ingress-error"}
        }
        date {
          match => ["timestamp", "MMdd HH:mm:ss.SSSSSS"]
          remove_field => ["timestamp"]
        }
      }
    }
  }
}