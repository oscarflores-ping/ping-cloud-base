filter {
	if ([kubernetes][container_name] == "pingcentral") {
    ### Parse only logs starting from log path.
    ### Everything else(hooks, logs going directly to console, etc) goes to logstash index without any parsing
		if ([log] =~ "^\/opt\/out\/instance(\/\w+)?\/log[s]?") {
			grok {
				match => {
					"log" => [ "^\/opt\/out\/instance(\/\w+)?\/log[s]?\/%{DATA:log_name}(\.log)?(\.out)? %{GREEDYDATA:log_string}" ]
				}
				remove_field => ["log"]
			}
            if ([log_string] == "") {
                drop {}
            }
			mutate {
				add_field => {"[@metadata][index]" => "pc-%{log_name}"}
			}
			if ([log_name] == "application-ext" or [log_name] == "application") {
				grok {
					match => {
						"log_string" => "%{TIMESTAMP_ISO8601:timestamp}[ ]{1,3}%{WORD:logLevel}[ ]{1,3}%{NOTSPACE:className}:%{NUMBER:position} - %{GREEDYDATA:message}"
					}
					remove_field => ["log_string"]
				}
				if ([log_name] == "application") {
                    mutate {
                        replace => {"[@metadata][index]" => "pc-application-log"}
                    }
                }
			}
			else if ([log_name] == "monitor") {
				grok {
					match => {
						"log_string" => "%{TIMESTAMP_ISO8601:timestamp} \| %{NOTSPACE:className} %{GREEDYDATA:message}"
					}
					remove_field => ["log_string"]
				}
			}
			else if ([log_name] == "application-api") {
				dissect {
					mapping => {
						"log_string" => "%{timestamp} | %{className} %{user} | %{method} | %{client} | %{requestUri} | %{responseCode}"
					}
					remove_field => ["log_string"]
				}
			}
			if ([timestamp]) {
				date {
					match => [ "timestamp", "ISO8601", "yyyy-MM-dd HH:mm:ss" ]
					remove_field => ["timestamp"]
				}
			}
		}
	}
}